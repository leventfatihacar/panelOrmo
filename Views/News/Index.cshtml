@model List<panelOrmo.Models.News>
@{
    ViewData["Title"] = "News Management";
    Layout = "_Layout";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">
            <i class="fas fa-newspaper me-2 text-primary"></i>
            News Management
        </h2>
        <p class="text-muted mb-0">Manage your news articles and content</p>
    </div>
    <a href="/News/Create" class="btn btn-primary btn-lg">
        <i class="fas fa-plus me-2"></i>Add New Article
    </a>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h3 class="mb-0">@Model.Count</h3>
                        <p class="mb-0">Total Articles</p>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-newspaper fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h3 class="mb-0">@Model.Count(n => n.CIsValid)</h3>
                        <p class="mb-0">Active Articles</p>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-check-circle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h3 class="mb-0">@Model.Count(n => !n.CIsValid)</h3>
                        <p class="mb-0">Inactive Articles</p>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-pause-circle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h3 class="mb-0">@Model.Count(n => n.CLanguageID == 1)</h3>
                        <p class="mb-0">Turkish Articles</p>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-language fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Filters and Search -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0">
            <i class="fas fa-filter me-2"></i>Filters & Search
        </h5>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-4">
                <label class="form-label">Search Articles</label>
                <input type="text" class="form-control" id="searchInput" placeholder="Search by title...">
            </div>
            <div class="col-md-3">
                <label class="form-label">Language</label>
                <select class="form-select" id="languageFilter">
                    <option value="">All Languages</option>
                    <option value="1">Turkish</option>
                    <option value="2">English</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Status</label>
                <select class="form-select" id="statusFilter">
                    <option value="">All Status</option>
                    <option value="true">Active</option>
                    <option value="false">Inactive</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">&nbsp;</label>
                <button class="btn btn-outline-secondary w-100" onclick="clearFilters()">
                    <i class="fas fa-times me-1"></i>Clear
                </button>
            </div>
        </div>
    </div>
</div>

<!-- News Articles Table -->
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">
            <i class="fas fa-list me-2"></i>Articles List
        </h5>
        <div class="d-flex gap-2">
            <button class="btn btn-outline-primary btn-sm" onclick="location.reload()">
                <i class="fas fa-sync-alt me-1"></i>Refresh
            </button>
            <div class="dropdown">
                <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                    <i class="fas fa-download me-1"></i>Export
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" href="#"><i class="fas fa-file-csv me-2"></i>Export CSV</a></li>
                    <li><a class="dropdown-item" href="#"><i class="fas fa-file-excel me-2"></i>Export Excel</a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover mb-0" id="newsTable">
                <thead class="table-light">
                    <tr>
                        <th width="80">ID</th>
                        <th>Title</th>
                        <th width="120">Language</th>
                        <th width="120">Status</th>
                        <th width="180">Created Date</th>
                        <th width="150" class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var news in Model)
                    {
                        <tr data-language="@news.CLanguageID" data-status="@news.CIsValid.ToString().ToLower()">
                            <td class="fw-bold text-primary">#@news.CID</td>
                            <td>
                                <div class="d-flex align-items-center">
                                    @if (!string.IsNullOrEmpty(news.CImage))
                                    {
                                        <img src="@news.CImage" alt="Article image" class="me-2" style="width: 40px; height: 40px; object-fit: cover; border-radius: 6px;">
                                    }
                                    else
                                    {
                                        <div class="me-2 bg-light d-flex align-items-center justify-content-center" style="width: 40px; height: 40px; border-radius: 6px;">
                                            <i class="fas fa-image text-muted"></i>
                                        </div>
                                    }
                                    <div>
                                        <div class="fw-bold">@news.CTitle</div>
                                        <small class="text-muted">@(news.CContent.Length > 50 ? news.CContent.Substring(0, 50) + "..." : news.CContent)</small>
                                    </div>
                                </div>
                            </td>
                            <td>
                                @if (news.CLanguageID == 1)
                                {
                                    <span class="badge bg-primary">
                                        <i class="fas fa-flag me-1"></i>Turkish
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-success">
                                        <i class="fas fa-flag me-1"></i>English
                                    </span>
                                }
                            </td>
                            <td>
                                @if (news.CIsValid)
                                {
                                    <span class="badge bg-success">
                                        <i class="fas fa-check me-1"></i>Active
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">
                                        <i class="fas fa-times me-1"></i>Inactive
                                    </span>
                                }
                            </td>
                            <td>
                                <div class="small">
                                    <div><i class="fas fa-calendar me-1"></i>@news.CCreatedDate.ToString("dd/MM/yyyy")</div>
                                    <div class="text-muted"><i class="fas fa-clock me-1"></i>@news.CCreatedDate.ToString("HH:mm")</div>
                                </div>
                            </td>
                            <td class="text-center">
                                <div class="btn-group btn-group-sm">
                                    <a href="/News/Edit/@news.CID" class="btn btn-outline-primary" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button class="btn btn-outline-info" onclick="viewNews(@news.CID)" title="View">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="btn btn-outline-@(news.CIsValid ? "warning" : "success")"
                                            onclick="toggleStatus(@news.CID, @news.CIsValid.ToString().ToLower())"
                                            title="@(news.CIsValid ? "Deactivate" : "Activate")">
                                        <i class="fas fa-toggle-@(news.CIsValid ? "on" : "off")"></i>
                                    </button>
                                    <button class="btn btn-outline-danger" onclick="deleteNews(@news.CID)" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@if (!Model.Any())
{
    <div class="card mt-4">
        <div class="card-body text-center py-5">
            <i class="fas fa-newspaper fa-4x text-muted mb-3"></i>
            <h4>No News Articles Found</h4>
            <p class="text-muted">Get started by creating your first news article.</p>
            <a href="/News/Create" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>Create First Article
            </a>
        </div>
    </div>
}

@section Scripts {
    <script>
        function toggleStatus(id, currentStatus) {
            if (confirm('Are you sure you want to change the status of this news article?')) {
                fetch('/News/ToggleStatus', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ id: id, status: !currentStatus })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error updating status');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error updating status');
                });
            }
        }

        function deleteNews(id) {
            if (confirm('Are you sure you want to delete this news article? This action cannot be undone.')) {
                fetch('/News/Delete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(id)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error deleting news article');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error deleting news article');
                });
            }
        }

        function viewNews(id) {
            // Add view functionality here
            window.open('/News/Details/' + id, '_blank');
        }

        // Search and filter functionality
        document.getElementById('searchInput').addEventListener('keyup', filterTable);
        document.getElementById('languageFilter').addEventListener('change', filterTable);
        document.getElementById('statusFilter').addEventListener('change', filterTable);

        function filterTable() {
            const searchValue = document.getElementById('searchInput').value.toLowerCase();
            const languageValue = document.getElementById('languageFilter').value;
            const statusValue = document.getElementById('statusFilter').value;
            const rows = document.querySelectorAll('#newsTable tbody tr');

            rows.forEach(row => {
                const title = row.cells[1].textContent.toLowerCase();
                const language = row.getAttribute('data-language');
                const status = row.getAttribute('data-status');

                const matchesSearch = title.includes(searchValue);
                const matchesLanguage = !languageValue || language === languageValue;
                const matchesStatus = !statusValue || status === statusValue;

                if (matchesSearch && matchesLanguage && matchesStatus) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        function clearFilters() {
            document.getElementById('searchInput').value = '';
            document.getElementById('languageFilter').value = '';
            document.getElementById('statusFilter').value = '';
            filterTable();
        }
    </script>
}