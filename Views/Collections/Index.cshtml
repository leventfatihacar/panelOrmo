@model List<panelOrmo.Models.Collection>
@{
    ViewData["Title"] = "Collections Management";
    Layout = "_Layout";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">
            <i class="fas fa-layer-group me-2 text-success"></i>
            Collections Management
        </h2>
        <p class="text-muted mb-0">Manage your product collections and categories</p>
    </div>
    <a href="/Collections/Create" class="btn btn-success btn-lg">
        <i class="fas fa-plus me-2"></i>Add New Collection
    </a>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h3 class="mb-0">@Model.Count</h3>
                        <p class="mb-0">Total Collections</p>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-layer-group fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h3 class="mb-0">@Model.Count(c => c.BIsValid)</h3>
                        <p class="mb-0">Active Collections</p>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-check-circle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h3 class="mb-0">@Model.Count(c => !c.BIsValid)</h3>
                        <p class="mb-0">Inactive Collections</p>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-pause-circle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h3 class="mb-0">@Model.Count(c => c.BLanguageID == 1)</h3>
                        <p class="mb-0">Turkish Collections</p>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-language fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Filters -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0">
            <i class="fas fa-filter me-2"></i>Filters & Search
        </h5>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-4">
                <label class="form-label">Search Collections</label>
                <input type="text" class="form-control" id="searchInput" placeholder="Search by name or summary...">
            </div>
            <div class="col-md-3">
                <label class="form-label">Language</label>
                <select class="form-select" id="languageFilter">
                    <option value="">All Languages</option>
                    <option value="1">Turkish</option>
                    <option value="2">English</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Status</label>
                <select class="form-select" id="statusFilter">
                    <option value="">All Status</option>
                    <option value="true">Active</option>
                    <option value="false">Inactive</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">&nbsp;</label>
                <button class="btn btn-outline-secondary w-100" onclick="clearFilters()">
                    <i class="fas fa-times me-1"></i>Clear
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Collections Grid/Table Toggle -->
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">
            <i class="fas fa-list me-2"></i>Collections List
        </h5>
        <div class="d-flex gap-2">
            <div class="btn-group" role="group">
                <input type="radio" class="btn-check" name="viewMode" id="gridView" checked>
                <label class="btn btn-outline-secondary btn-sm" for="gridView">
                    <i class="fas fa-th-large"></i> Grid
                </label>
                <input type="radio" class="btn-check" name="viewMode" id="tableView">
                <label class="btn btn-outline-secondary btn-sm" for="tableView">
                    <i class="fas fa-list"></i> Table
                </label>
            </div>
            <button class="btn btn-outline-primary btn-sm" onclick="location.reload()">
                <i class="fas fa-sync-alt me-1"></i>Refresh
            </button>
        </div>
    </div>
    <div class="card-body p-0">
        <!-- Grid View -->
        <div id="gridViewContent" class="p-3">
            <div class="row" id="collectionsGrid">
                @foreach (var collection in Model)
                {
                    <div class="col-md-4 mb-3" data-language="@collection.BLanguageID" data-status="@collection.BIsValid.ToString().ToLower()">
                        <div class="card h-100 collection-card">
                            @if (!string.IsNullOrEmpty(collection.BImage))
                            {
                                <img src="@collection.BImage" class="card-img-top" alt="Collection image" style="height: 200px; object-fit: cover;">
                            }
                            else
                            {
                                <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                    <i class="fas fa-image fa-3x text-muted"></i>
                                </div>
                            }
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h5 class="card-title mb-0">@collection.BName</h5>
                                    @if (collection.BLanguageID == 1)
                                    {
                                        <span class="badge bg-primary">🇹🇷 TR</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">🇺🇸 EN</span>
                                    }
                                </div>
                                <p class="card-text text-muted small">@collection.BSummary</p>
                                <div class="d-flex justify-content-between align-items-center">
                                    @if (collection.BIsValid)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check me-1"></i>Active
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">
                                            <i class="fas fa-times me-1"></i>Inactive
                                        </span>
                                    }
                                    <small class="text-muted">
                                        <i class="fas fa-calendar me-1"></i>
                                        @collection.BCreatedDate.ToString("dd/MM/yyyy")
                                    </small>
                                </div>
                            </div>
                            <div class="card-footer bg-transparent">
                                <div class="btn-group w-100" role="group">
                                    <a href="/Collections/Edit/@collection.BID" class="btn btn-outline-primary btn-sm">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                    <button class="btn btn-outline-@(collection.BIsValid ? "warning" : "success") btn-sm"
                                            onclick="toggleCollectionStatus(@collection.BID, @collection.BIsValid.ToString().ToLower())">
                                        <i class="fas fa-toggle-@(collection.BIsValid ? "on" : "off")"></i>
                                        @(collection.BIsValid ? "Disable" : "Enable")
                                    </button>
                                    <button class="btn btn-outline-danger btn-sm" onclick="deleteCollection(@collection.BID)">
                                        <i class="fas fa-trash"></i> Delete
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Table View -->
        <div id="tableViewContent" style="display: none;">
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="collectionsTable">
                    <thead class="table-light">
                        <tr>
                            <th width="80">ID</th>
                            <th>Name</th>
                            <th>Summary</th>
                            <th width="120">Language</th>
                            <th width="120">Status</th>
                            <th width="150">Created Date</th>
                            <th width="180" class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var collection in Model)
                        {
                            <tr data-language="@collection.BLanguageID" data-status="@collection.BIsValid.ToString().ToLower()">
                                <td class="fw-bold text-success">#@collection.BID</td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        @if (!string.IsNullOrEmpty(collection.BImage))
                                        {
                                            <img src="@collection.BImage" alt="Collection image" class="me-2" style="width: 40px; height: 40px; object-fit: cover; border-radius: 6px;">
                                        }
                                        else
                                        {
                                            <div class="me-2 bg-light d-flex align-items-center justify-content-center" style="width: 40px; height: 40px; border-radius: 6px;">
                                                <i class="fas fa-image text-muted"></i>
                                            </div>
                                        }
                                        <div>
                                            <div class="fw-bold">@collection.BName</div>
                                        </div>
                                    </div>
                                </td>
                                <td>@collection.BSummary</td>
                                <td>
                                    @if (collection.BLanguageID == 1)
                                    {
                                        <span class="badge bg-primary">
                                            <i class="fas fa-flag me-1"></i>Turkish
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-flag me-1"></i>English
                                        </span>
                                    }
                                </td>
                                <td>
                                    @if (collection.BIsValid)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check me-1"></i>Active
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">
                                            <i class="fas fa-times me-1"></i>Inactive
                                        </span>
                                    }
                                </td>
                                <td>
                                    <div class="small">
                                        <div><i class="fas fa-calendar me-1"></i>@collection.BCreatedDate.ToString("dd/MM/yyyy")</div>
                                        <div class="text-muted"><i class="fas fa-clock me-1"></i>@collection.BCreatedDate.ToString("HH:mm")</div>
                                    </div>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group btn-group-sm">
                                        <a href="/Collections/Edit/@collection.BID" class="btn btn-outline-primary" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button class="btn btn-outline-@(collection.BIsValid ? "warning" : "success")"
                                                onclick="toggleCollectionStatus(@collection.BID, @collection.BIsValid.ToString().ToLower())"
                                                title="@(collection.BIsValid ? "Deactivate" : "Activate")">
                                            <i class="fas fa-toggle-@(collection.BIsValid ? "on" : "off")"></i>
                                        </button>
                                        <button class="btn btn-outline-danger" onclick="deleteCollection(@collection.BID)" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@if (!Model.Any())
{
    <div class="card mt-4">
        <div class="card-body text-center py-5">
            <i class="fas fa-layer-group fa-4x text-muted mb-3"></i>
            <h4>No Collections Found</h4>
            <p class="text-muted">Get started by creating your first collection.</p>
            <a href="/Collections/Create" class="btn btn-success">
                <i class="fas fa-plus me-2"></i>Create First Collection
            </a>
        </div>
    </div>
}

@section Scripts {
    <script>
        // View mode toggle
        document.getElementById('gridView').addEventListener('change', function() {
            if (this.checked) {
                document.getElementById('gridViewContent').style.display = 'block';
                document.getElementById('tableViewContent').style.display = 'none';
            }
        });

        document.getElementById('tableView').addEventListener('change', function() {
            if (this.checked) {
                document.getElementById('gridViewContent').style.display = 'none';
                document.getElementById('tableViewContent').style.display = 'block';
            }
        });

        function toggleCollectionStatus(id, currentStatus) {
            if (confirm('Are you sure you want to change the status of this collection?')) {
                fetch('/Collections/ToggleStatus', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ id: id, status: !currentStatus })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error updating status');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error updating status');
                });
            }
        }

        function deleteCollection(id) {
            if (confirm('Are you sure you want to delete this collection? This action cannot be undone.')) {
                // Add delete functionality here
                alert('Delete functionality not implemented yet');
            }
        }

        // Search and filter functionality
        document.getElementById('searchInput').addEventListener('keyup', filterCollections);
        document.getElementById('languageFilter').addEventListener('change', filterCollections);
        document.getElementById('statusFilter').addEventListener('change', filterCollections);

        function filterCollections() {
            const searchValue = document.getElementById('searchInput').value.toLowerCase();
            const languageValue = document.getElementById('languageFilter').value;
            const statusValue = document.getElementById('statusFilter').value;

            // Filter grid view
            const gridItems = document.querySelectorAll('#collectionsGrid > div');
            gridItems.forEach(item => {
                const text = item.textContent.toLowerCase();
                const language = item.getAttribute('data-language');
                const status = item.getAttribute('data-status');

                const matchesSearch = text.includes(searchValue);
                const matchesLanguage = !languageValue || language === languageValue;
                const matchesStatus = !statusValue || status === statusValue;

                if (matchesSearch && matchesLanguage && matchesStatus) {
                    item.style.display = '';
                } else {
                    item.style.display = 'none';
                }
            });

            // Filter table view
            const tableRows = document.querySelectorAll('#collectionsTable tbody tr');
            tableRows.forEach(row => {
                const text = row.textContent.toLowerCase();
                const language = row.getAttribute('data-language');
                const status = row.getAttribute('data-status');

                const matchesSearch = text.includes(searchValue);
                const matchesLanguage = !languageValue || language === languageValue;
                const matchesStatus = !statusValue || status === statusValue;

                if (matchesSearch && matchesLanguage && matchesStatus) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        function clearFilters() {
            document.getElementById('searchInput').value = '';
            document.getElementById('languageFilter').value = '';
            document.getElementById('statusFilter').value = '';
            filterCollections();
        }

        // Collection card hover effects
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.collection-card');
            cards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-5px)';
                    this.style.boxShadow = '0 8px 25px rgba(0,0,0,0.15)';
                });

                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                    this.style.boxShadow = '';
                });
            });
        });
    </script>
}