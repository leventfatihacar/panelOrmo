@model panelOrmo.Models.CollectionProductEditViewModel
@{
    ViewData["Title"] = "Edit Collection Product";
    Layout = "_Layout";
    var collectionGroups = ViewBag.CollectionGroups as List<panelOrmo.Models.CollectionGroup>;
}

<div class="container mt-4">
    <h2>Edit Collection Product</h2>
    <form action="/CollectionProducts/Edit/@ViewContext.RouteData.Values["id"]" method="post" enctype="multipart/form-data">
        <div class="row">
            <div class="col-md-8">
                <div class="mb-3">
                    <label for="Product_ProductCode" class="form-label">Product Code *</label>
                    <input name="Product.ProductCode" id="Product_ProductCode" class="form-control" placeholder="Enter product code" value="@Model.Product.ProductCode" required />
                    <span asp-validation-for="Product.ProductCode" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label for="Product_CollectionGroupID" class="form-label">Collection Group *</label>
                    <select name="Product.CollectionGroupID" id="Product_CollectionGroupID" class="form-select" required>
                        <option value="">Select Collection Group</option>
                        @if (collectionGroups != null)
                        {
                            @foreach (var group in collectionGroups)
                            {
                                @if (Model.Product.CollectionGroupID == group.DID)
                                {
                                    <option value="@group.DID" selected>@group.DName</option>
                                }
                                else
                                {
                                    <option value="@group.DID">@group.DName</option>
                                }
                            }
                        }
                    </select>
                    <span asp-validation-for="Product.CollectionGroupID" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label for="Product_Content" class="form-label">Product Content *</label>
                    <textarea name="Product.Content" id="Product_Content" class="form-control" rows="5" placeholder="Enter product details and ingredients" required>@Model.Product.Content</textarea>
                    <div class="form-text">Content will be automatically wrapped in &lt;p&gt; tags</div>
                    <span asp-validation-for="Product.Content" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-4">
                <div class="mb-3">
                    <label for="Product_SmallImage" class="form-label">Small Image</label>
                    <input name="Product.SmallImage" id="Product_SmallImage" type="file" class="form-control" accept="image/jpeg" />
                    <div class="form-text">Small product image (.jpg only). Leave blank to keep current.</div>
                    @if (!string.IsNullOrEmpty(Model.CurrentSmallImage))
                    {
                        <div class="mt-2">
                            <p>Current:</p>
                            <img src="@Model.CurrentSmallImage" style="max-width: 100px;" />
                        </div>
                    }
                </div>

                <div class="mb-3">
                    <label for="Product_MediumImage" class="form-label">Medium Image</label>
                    <input name="Product.MediumImage" id="Product_MediumImage" type="file" class="form-control" accept="image/jpeg" />
                    <div class="form-text">Medium product image (.jpg only). Leave blank to keep current.</div>
                    @if (!string.IsNullOrEmpty(Model.CurrentMediumImage))
                    {
                        <div class="mt-2">
                            <p>Current:</p>
                            <img src="@Model.CurrentMediumImage" style="max-width: 150px;" />
                        </div>
                    }
                </div>

                <div class="form-check mb-3">
                    @if (Model.Product.IsActive)
                    {
                        <input name="Product.IsActive" id="Product_IsActive" class="form-check-input" type="checkbox" value="true" checked />
                    }
                    else
                    {
                        <input name="Product.IsActive" id="Product_IsActive" class="form-check-input" type="checkbox" value="true" />
                    }
                    <input type="hidden" name="Product.IsActive" value="false" />
                    <label for="Product_IsActive" class="form-check-label">Active</label>
                </div>
            </div>
        </div>

        <div class="d-flex gap-2">
            <button type="submit" class="btn btn-primary">Save Changes</button>
            <a href="/CollectionProducts/Index" class="btn btn-secondary">Cancel</a>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Debug form submission
        document.querySelector('form').addEventListener('submit', function(e) {
            console.log('Form submission debug:');

            const formData = new FormData(this);
            for (let [key, value] of formData.entries()) {
                console.log(`${key}: ${value}`);
            }

            // Specific check for CollectionGroupID
            const groupSelect = document.getElementById('Product_CollectionGroupID');
            console.log('CollectionGroupID element value:', groupSelect.value);
            console.log('CollectionGroupID selected index:', groupSelect.selectedIndex);
            console.log('CollectionGroupID selected option text:', groupSelect.options[groupSelect.selectedIndex]?.text);

            // Validate required fields
            if (!groupSelect.value) {
                alert('Please select a Collection Group');
                e.preventDefault();
                return false;
            }
        });

        // Debug dropdown change
        document.getElementById('Product_CollectionGroupID').addEventListener('change', function() {
            console.log('CollectionGroupID changed to:', this.value);
        });
    </script>
}