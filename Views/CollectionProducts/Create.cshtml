@model panelOrmo.Models.CollectionProductViewModel
@{
    ViewData["Title"] = "Create Collection Product";
    Layout = "_Layout";
    var collectionGroups = ViewBag.CollectionGroups as List<panelOrmo.Models.CollectionGroup>;
}

<style>
    .image-upload-section {
        background: white;
        border: 1px solid #dee2e6;
        border-radius: 10px;
    }

    .image-pair {
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        transition: all 0.2s ease;
        position: relative;
        overflow: hidden;
    }

    .image-pair:hover {
        border-color: #007bff;
    }

    .image-pair-header {
        background: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
        padding: 8px 12px;
        margin: -1px -1px 12px -1px;
        border-radius: 7px 7px 0 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 0.875rem;
        font-weight: 600;
        color: #495057;
    }

    .image-input-group {
        margin-bottom: 12px;
    }

    .image-input-label {
        display: block;
        background: #f8f9fa;
        border: 2px dashed #dee2e6;
        border-radius: 6px;
        padding: 15px;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease;
        min-height: 70px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        position: relative;
    }

    .image-input-label:hover {
        background: #e9ecef;
        border-color: #007bff;
    }

    .image-input-label i {
        font-size: 1.2rem;
        color: #6c757d;
        margin-bottom: 4px;
        pointer-events: none;
    }

    .image-input-label:hover i {
        color: #007bff;
    }

    .image-input-label span {
        pointer-events: none;
    }
    
    .file-input {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        cursor: pointer;
        z-index: 1;
    }

    .upload-header {
        background: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
        border-radius: 9px 9px 0 0;
        padding: 12px 15px;
        margin: -1px -1px 15px -1px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .upload-header h6 {
        color: #495057;
        font-weight: 600;
        margin: 0;
    }

    .add-image-btn {
        background: #007bff;
        border: none;
        color: white;
        padding: 6px 12px;
        border-radius: 6px;
        font-size: 0.875rem;
        font-weight: 500;
        transition: all 0.2s ease;
    }

    .add-image-btn:hover {
        background: #0056b3;
    }
    
    .remove-pair-btn {
        background: #dc3545;
        border: none;
        color: white;
        width: 24px;
        height: 24px;
        border-radius: 4px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
        font-size: 0.75rem;
    }

    .remove-pair-btn:hover {
        background: #c82333;
    }
    
    .file-selected {
        background: #d4edda !important;
        border-color: #28a745 !important;
        color: #155724;
    }

    .file-selected i {
        color: #28a745 !important;
    }
</style>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center pb-2 mb-4 border-bottom">
        <h2 class="mb-0">Create Collection Product</h2>
        <a href="/CollectionProducts/Index" class="btn btn-sm btn-outline-secondary">Back to List</a>
    </div>

    <form action="/CollectionProducts/Create" method="post" enctype="multipart/form-data" id="productForm">
        <div class="row">
            <div class="col-md-8">
                <div class="card mb-3">
                    <div class="card-body">
                        <div class="mb-3">
                            <label for="ProductCode" class="form-label">Product Code *</label>
                            <input name="ProductCode" id="ProductCode" class="form-control" placeholder="Enter product code" required />
                        </div>

                        <div class="mb-3">
                            <label for="CollectionGroupID" class="form-label">Collection Group *</label>
                            <select name="CollectionGroupID" id="CollectionGroupID" class="form-select" required>
                                <option value="">Select Collection Group</option>
                                @if (collectionGroups != null)
                                {
                                    @foreach (var group in collectionGroups)
                                    {
                                        <option value="@group.DID">@group.DName</option>
                                    }
                                }
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="Content" class="form-label">Product Content *</label>
                            <textarea name="Content" id="Content" class="form-control" rows="5" placeholder="Enter product details and ingredients" required></textarea>
                            <div class="form-text">Content will be automatically wrapped in &lt;p&gt; tags</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card mb-3">
                    <div class="card-header">
                        <h6 class="mb-0">Properties</h6>
                    </div>
                    <div class="card-body">
                        <div class="form-check">
                            <input name="IsActive" id="IsActive" class="form-check-input" type="checkbox" value="true" checked />
                            <input type="hidden" name="IsActive" value="false" />
                            <label for="IsActive" class="form-check-label">Active</label>
                        </div>
                    </div>
                </div>
                <div class="card image-upload-section">
                    <div class="upload-header">
                        <h6>Product Images</h6>
                        <button type="button" class="add-image-btn" onclick="addImagePair()">
                            <i class="fas fa-plus me-1"></i>Add Pair
                        </button>
                    </div>
                    <div class="card-body">
                        <div>
                            <div id="imagePairsContainer">
                                <!-- Initial new image pair -->
                                <div class="image-pair mb-2 p-2" data-index="0">
                                    <div class="image-pair-header">
                                        <span>New Pair 1</span>
                                        <button type="button" class="remove-pair-btn d-none" onclick="removeImagePair(this)">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>

                                    <div class="image-input-group">
                                        <label class="image-input-label" for="new-small-0">
                                            <i class="fas fa-image"></i>
                                            <span class="small">Small Image</span>
                                            <input name="ImagePairs[0].SmallImage" id="new-small-0" type="file" class="file-input" accept="image/jpeg" onchange="handleFileSelect(this)" />
                                        </label>
                                    </div>

                                    <div class="image-input-group">
                                        <label class="image-input-label" for="new-medium-0">
                                            <i class="fas fa-image"></i>
                                            <span class="small">Medium Image</span>
                                            <input name="ImagePairs[0].MediumImage" id="new-medium-0" type="file" class="file-input" accept="image/jpeg" onchange="handleFileSelect(this)" />
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <div class="text-center mt-2">
                                <small class="text-muted">
                                    <i class="fas fa-info-circle me-1"></i>
                                    At least one image must be uploaded
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-4">
            <button type="submit" class="btn btn-primary">Create Product</button>
            <a href="/CollectionProducts/Index" class="btn btn-secondary">Cancel</a>
        </div>
    </form>
</div>

@section Scripts {
<script>
    let imagePairIndex = 1;

    function addImagePair() {
        const container = document.getElementById('imagePairsContainer');
        const pairCount = container.children.length;
        const newIndex = imagePairIndex;

        const newPair = document.createElement('div');
        newPair.className = 'image-pair mb-2 p-2';
        newPair.setAttribute('data-index', newIndex);

        newPair.innerHTML = 
            `<div class="image-pair-header">
                <span>New Pair ${pairCount + 1}</span>
                <button type="button" class="remove-pair-btn" onclick="removeImagePair(this)">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="image-input-group">
                <label class="image-input-label" for="new-small-${newIndex}">
                    <i class="fas fa-image"></i>
                    <span class="small">Small Image</span>
                    <input name="ImagePairs[${newIndex}].SmallImage" id="new-small-${newIndex}" type="file" class="file-input" accept="image/jpeg" onchange="handleFileSelect(this)" />
                </label>
            </div>
            <div class="image-input-group">
                <label class="image-input-label" for="new-medium-${newIndex}">
                    <i class="fas fa-image"></i>
                    <span class="small">Medium Image</span>
                    <input name="ImagePairs[${newIndex}].MediumImage" id="new-medium-${newIndex}" type="file" class="file-input" accept="image/jpeg" onchange="handleFileSelect(this)" />
                </label>
            </div>`;

        container.appendChild(newPair);
        imagePairIndex++;
        updateRemoveButtons();
    }

    function removeImagePair(button) {
        const pair = button.closest('.image-pair');
        pair.remove();
        renumberImagePairs();
        updateRemoveButtons();
    }

    function renumberImagePairs() {
        const pairs = document.querySelectorAll('#imagePairsContainer .image-pair');
        pairs.forEach((pair, index) => {
            const title = pair.querySelector('.image-pair-header span');
            title.textContent = `New Pair ${index + 1}`;
            
            // Note: We don't re-index the inputs. The model binder can handle non-sequential indexes.
            // This simplifies the logic significantly and avoids issues with file selections being lost.
        });
    }

    function updateRemoveButtons() {
        const pairs = document.querySelectorAll('#imagePairsContainer .image-pair');
        pairs.forEach(pair => {
            const removeBtn = pair.querySelector('.remove-pair-btn');
            if (removeBtn) {
                removeBtn.classList.toggle('d-none', pairs.length <= 1);
            }
        });
    }

    function handleFileSelect(input) {
        const label = input.closest('.image-input-label');
        const fileName = input.files[0] ? input.files[0].name : null;
        const span = label.querySelector('span');
        const icon = label.querySelector('i');

        if (fileName) {
            label.classList.add('file-selected');
            if (span) {
                span.textContent = 'Selected: ' + (fileName.length > 15 ? fileName.substring(0, 15) + '...' : fileName);
            }
            icon.className = 'fas fa-check-circle';
        } else {
            label.classList.remove('file-selected');
            if (span) {
                span.textContent = span.textContent.includes('Small') ? 'Small Image' : 'Medium Image';
            }
            icon.className = 'fas fa-image';
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        updateRemoveButtons();

        document.getElementById('productForm').addEventListener('submit', function(e) {
            const pairs = document.querySelectorAll('#imagePairsContainer .image-pair');
            let hasAtLeastOneImage = false;

            if (pairs.length > 0) {
                const firstPair = pairs[0];
                const smallImage = firstPair.querySelector('input[name="ImagePairs[0].SmallImage"]');
                const mediumImage = firstPair.querySelector('input[name="ImagePairs[0].MediumImage"]');
                if ((smallImage && smallImage.files.length > 0) || (mediumImage && mediumImage.files.length > 0)) {
                    hasAtLeastOneImage = true;
                }
            }
            
            // This is a simple check. A more robust check might be needed.
            if (!hasAtLeastOneImage) {
                 e.preventDefault();
                 alert('Please upload at least one image (small or medium) in the first image pair.');
            }
        });
    });
</script>
}